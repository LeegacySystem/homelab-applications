apiVersion: argoproj.io/v1alpha1
kind: Application
metadata:
  name: pdns-database
  namespace: argocd
  annotations:
    argocd.argoproj.io/sync-wave: "2" # apply after secrets
spec:
  project: default
  destination:
    namespace: dns-system
    name: in-cluster
  sources:
    - repoURL: registry-1.docker.io/bitnamicharts
      chart: postgresql
      targetRevision: '16.0.6'
      helm:
        parameters:
          - name: auth.username
            value: 'pdns-db'
          - name: auth.existingSecret
            value: 'pdns-database-password'
          # - name: auth.database doesnt' seem to work with init script
          #   value: 'pdns-admin-db'
          - name: image.debug
            value: 'false'
          - name: primary.service.ports.postgresql
            value: '5432'
          - name: primary.persistence.enabled
            value: 'enabled'
          - name: primary.persistence.volumeName
            value: 'pdns-database-data'
          - name: primary.persistence.mountPath
            value: '/bitnami/postgresql'
          - name: primary.persistence.subPath
            value: 'data'
          - name: primary.persistence.storageClass
            value: 'longhorn'
          - name: primary.persistence.size
            value: '3Gi'
        values: |
          primary:
            extraEnvVars:
              - name: POSTGRES_PASSWORD
                valueFrom:
                  secretKeyRef:
                    name: pdns-database-password
                    key: postgres-password
            initdb:
              scripts:
                db_init_script.sh: |
                  #!/bin/sh
                  echo "test"
                  printenv
                  PGPASSWORD="$POSTGRES_PASSWORD" psql -U "pdns-db" -d postgres <<EOF
                  CREATE DATABASE "pdns-server-db";
                  GRANT ALL PRIVILEGES ON DATABASE "pdns-server-db" TO "pdns-db";
                  CREATE DATABASE "pdns-admin-db";
                  GRANT ALL PRIVILEGES ON DATABASE "pdns-admin-db" TO "pdns-db";
                  EOF
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                    - matchExpressions:
                        - key: node-type
                          operator: In
                          values:
                            - opt
  syncPolicy:
    automated: {}
    syncOptions:
      - CreateNamespace=true